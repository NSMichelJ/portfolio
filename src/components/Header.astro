---
  import ToggleNavbarButton from "./ToggleNavbarButton.astro";
  import ThemeSwitch from './ThemeSwitch.astro';

  const links = [
    {
      href: "/#about-me",
      label: "Acerca de m√≠",
      icon: 'mdi:account'
    },
    {
      href: "/#experience",
      label: "Experiencia",
      icon: 'mdi:certificate'
    },
    {
      href: "/#projects",
      label: "Proyectos",
      icon: 'mdi:code'
    },
    {
      href: "/#contact",
      label: "Contacto",
      icon: 'mdi:email'
    },
  ];
---

<script>
  const navlinks = document.querySelector("#navlinks");
  const hamburger = document.querySelector("#hamburger");
  const layer = document.querySelector("#navLayer");
  const links = [...navlinks.querySelector("ul").children];
  const sections = document.querySelectorAll("section");

  let isToggled = false;

  function toggleNavlinks() {
    if (isToggled) {
      navlinks.classList.add("!visible", "!scale-100", "!opacity-100", "!lg:translate-y-0");
      hamburger.classList.add("active");
      layer.classList.add("origin-top", "scale-y-100");
    } else {
      navlinks.classList.remove("!visible", "!scale-100", "!opacity-100", "!lg:translate-y-0");
      hamburger.classList.remove("active");
      layer.classList.remove("origin-top", "scale-y-100");
    }
    isToggled = !isToggled;
  }
  hamburger.addEventListener("click", toggleNavlinks);

  links.forEach((link) => link.addEventListener("click", toggleNavlinks));

  const callback = (entries) => {
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        links.forEach((item) => {
          const link = item.querySelector("a");
          if (!link) return
          if (link.getAttribute("aria-label") == entry.target.id) {
            link.classList.add("link-active");
          } else {
            link.classList.remove("link-active");
          }
        });
      }
    });
  };

  const observer = new IntersectionObserver(callback, {
    root: null,
    rootMargin: "0px",
    threshold: 0.3,
  });

  sections.forEach((section) => {
    observer.observe(section);
  });

  window.onunload = () => {
    observer.disconnect();
  };


</script>


<header>
  <nav
    class="bg-white/80 fixed top-0 left-0 z-10 w-full border-b border-black/5 dark:border-white/5 lg:border-transparent backdrop-blur-sm bg-transparent dark:bg-black/60">
    <div class="max-w-7xl mx-auto px-6 md:px-12 xl:px-6">
      <div class="relative flex flex-wrap items-center justify-between gap-6 py-2 md:gap-0 md:py-3">
        <div class="relative z-20 flex w-full justify-between md:px-0 lg:w-max">
          <a href="/" aria-label="logo" class="flex items-center space-x-2">
            <img src="/img/logo/logo.png" alt="Logo NSMichelJ" class="size-8 mx-auto" style={{ aspectRatio: "100/100" ,
              objectFit: "cover" , }} />
            <span class="text-2xl font-bold text-black dark:text-white">NSMichelJ</span>
          </a>

          <div class="relative flex max-h-10 items-center lg:hidden">
            <ToggleNavbarButton id="hamburger" />
          </div>
        </div>
        <div id="navLayer" aria-hidden="true"
          class="fixed inset-0 z-10 h-screen w-screen origin-bottom scale-y-0 bg-white/70 backdrop-blur-2xl transition duration-500 dark:bg-gray-900/70 lg:hidden">
        </div>
        <div id="navlinks"
          class="invisible absolute top-full left-0 z-20 w-full origin-top-right translate-y-1 scale-90 flex-col flex-wrap justify-end gap-6 rounded-3xl border border-gray-100 bg-white p-8 opacity-0 shadow-2xl shadow-gray-600/10 transition-all duration-300  dark:shadow-none lg:visible lg:relative lg:flex lg:w-8/12 lg:translate-y-0 lg:scale-100 lg:flex-row dark:border-gray-700 dark:bg-gray-800 lg:items-center lg:gap-0 lg:border-none lg:bg-transparent lg:p-0 lg:opacity-100 lg:shadow-none dark:lg:bg-transparent">
          <div class="w-full text-gray-800 dark:text-gray-200 lg:w-auto lg:pr-4 lg:pt-0">
            <ul class="flex flex-col gap-6 tracking-wide lg:flex-row lg:items-start lg:gap-0 lg:text-sm ">
              {links.map((link) => (
              <li>
                <a href={link.href}
                  class="px-3 py-2 font-bold font-medium rounded-md hover:bg-gray-700 hover:text-white"
                  aria-label={link.href.slice(2)}>
                  {link.label}
                </a>
              </li>
              ))}
              <li class="flex items-center px-3 lg:ps-10">
                <ThemeSwitch />
              </li>
            </ul>
          </div>
        </div>
      </div>
    </div>
  </nav>
</header>

<style>
  @reference "tailwindcss";

  .link-active {
    @apply bg-gray-700 text-white
  }
</style>